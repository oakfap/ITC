#define LED_W_R 4
#define LED_W_Y 5
#define LED_W_G 6
#define WEST_BUTTON_PIN 2

#define LED_S_R 8
#define LED_S_Y 9
#define LED_S_G 10
#define SOUTH_BUTTON_PIN 3

#define LED_WK_R 11
#define LED_WK_G 12
#define WALK_BUTTON_PIN 13

#define goW 0
#define waitW 1
#define goS 2
#define waitS 3
#define walk 4
#define waitwalk 5
struct State {
  unsigned long  ST_Out ; // 6 bit pattern to street output
  unsigned long Time; // delay in ms units
  unsigned long Next[8];
}; // next state for inputs 0,1,2,3
typedef const struct State SType;
SType FSM[6] = {
  {0x61, 3000, goS, waitS, goS, waitS, walk, walk, walk, walk},
  {0x4C, 3000, goW, goW, waitW, waitW, walk, walk, walk, walk},
  {0x62, 500, goW, goW, goW, goW, walk, walk, walk, walk},
  {0x54, 500, goS, goS, goS, goS, walk, walk, walk, walk},
  {0xA4, 3000, walk, waitwalk, waitwalk, waitwalk, walk, walk, walk, walk},
  {0x64, 500, waitwalk, goW, goS, goW, walk, walk, walk, walk}
};

unsigned long S = 4 ; // index to the current state
void setup() {
  Serial.begin(9600);
  pinMode(LED_W_R, OUTPUT);
  pinMode(LED_W_Y, OUTPUT);
  pinMode(LED_W_G, OUTPUT);
  pinMode(WEST_BUTTON_PIN, INPUT_PULLUP);

  pinMode(LED_S_R, OUTPUT);
  pinMode(LED_S_Y, OUTPUT);
  pinMode(LED_S_G, OUTPUT);
  pinMode(SOUTH_BUTTON_PIN, INPUT_PULLUP);

  pinMode(LED_WK_R, OUTPUT);
  pinMode(LED_WK_G, OUTPUT);
  pinMode(WALK_BUTTON_PIN, INPUT_PULLUP);
}
int input, inputW, inputS , inputWK;

void loop() {
  digitalWrite(LED_W_R, FSM[S].ST_Out & B00000001);
  digitalWrite(LED_W_Y, !(FSM[S].ST_Out & B00000010));
  digitalWrite(LED_W_G, FSM[S].ST_Out & B00000100);
  digitalWrite(LED_S_R, FSM[S].ST_Out & B00001000);
  digitalWrite(LED_S_Y, !(FSM[S].ST_Out & B00010000));
  digitalWrite(LED_S_G, FSM[S].ST_Out & B00100000);
  digitalWrite(LED_WK_G, FSM[S].ST_Out & B01000000);
  digitalWrite(LED_WK_R, FSM[S].ST_Out & B10000000);
  delay(FSM[S].Time);
  
    inputW = !digitalRead (WEST_BUTTON_PIN);
    inputS = !digitalRead (SOUTH_BUTTON_PIN);
    inputWK = !digitalRead (WALK_BUTTON_PIN);
    input = inputWK * 4 + inputS * 2 + inputW;
    Serial.println(input);
    S = FSM[S].Next[input];
  
}
